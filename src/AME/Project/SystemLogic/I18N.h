/*
 * I18N.h
 *
 *  Created on: May 27, 2024
 *      Author: D. Schulz, AME
 *  Copyright (c) 2024 Andreas Müller electronic GmbH (AME)
 */

#ifndef SRC_AME_PROJECT_SYSTEMLOGIC_I18N_H_
#define SRC_AME_PROJECT_SYSTEMLOGIC_I18N_H_

namespace AME_SRC {

class I18N {
 public:
    enum textNumber{
      txtPlcCmd            = 0,   // "PLC Kommandos: "
      cTxtPlcInit          = 1,   // "plcInit"
      cTxtPlcJoin          = 2,   // "plcJoin"
      cTxtPlcFJoin         = 3,   // "plcForceJoin"
      cTxtPlcFNetMember    = 4,   // "forceNetMember"
      cTxtSearchNet        = 5,   // "searchNetwork"
      cTxtGetADP           = 6,   // "getADPAttribute"
      cTxtSetADP           = 7,   // "setADPAttribute"
      cTxtGetEAP           = 8,   // "getEAPAttribute"
      cTxtSetEAP           = 9,   // "setEAPAttribute"
      cTxtGetMAC           = 10,  // "getMacAttribute"
      cTxtSetMAC           = 11,  // "setMacAttribute"
      cTxtSetClient        = 12,  // "setClientInfo"
      cTxtShowMem          = 13,  // "showMembers"
      cTxtSendMess         = 14,  // "sendMessage"
      cTxtSetVerb          = 15,  // "setVerbose"
      cTxtRoutDisc         = 16,  // "routeDiscovery"
      cTxtPathDisc         = 17,  // "pathDiscovery"
      cTxtRPathDisc        = 18,  // "remotePathDisc"
      cTxtPeerRout         = 19,  // "peerRouting"
      cTxtCoordRout        = 20,  // "coordRouting"
      cTxtStartAlive       = 21,  // "startAliveCheck"
      cTxtAliveInt         = 22,  // "AliveInterval"
      cTxtAliveNPeer       = 23,  // "AliveNextPeer"
      dTxtSeparator        = 24,  // "---------------------------------------------------------------"
      dTxtPlcInit          = 25,  // "[P|C] Initialisiert das Modem als Peer oder Coordinator"
      dTxtPlcJoin          = 26,  // "[panID] [lbAderesse] Joint einem PLC Netzwerk"
      dTxtPlcFJoin         = 27,  // "[netId] [EigeneAdresse] Forciert einen Join"
      dTxtPlcFNetMember    = 28,  // "[ListIndex][IpAdr][shortAddress][link] link:"
                                  // " 0=disconnected, 1=pending, 2=rejected, 3=connected, 4=not verified"
      dTxtSearchNet        = 29,  // "[Sekunden]  Sucht X Sekunden nach Netzwerken"
      dTxtGet              = 30,  // "[identifier][tabellenindex]"
      dTxtSet              = 31,  // "[identifier][tabellenindex][Attribut]"
      dTxtSetClient        = 32,  // "[validFlag][extendedAdress][networkAdress]"
      dTxtShowMem          = 33,  // "zeigt alle Netzwerkteilnehmer an"
      dTxtSendMess         = 34,  // "[N/B] [memberID] [Nachricht] Sendet eine Nachricht an den Teilnehmer."
      dTxtSetVerb          = 35,  // "[status] Aendert die Ausgabenmenge : 0= Alles 1= Details 2= Nichts"
      dTxtRoutDisc         = 36,  // "[memberID][maxHops] Sucht einen Pfad  bis maximal (maxHops)"
      dTxtPathDisc         = 37,  // "[memberID][metric](Default: 15) Fuehrt eine Pfaderkundung aus"
      dTxtRPathDisc        = 38,  // "[sourceID][destID] Pfaderkundung zwischen Netzwerkteilnehmern"
      dTxtPeerRout         = 39,  // " Startet das Routing zwischen den Peers"
      dTxtCoordRout        = 40,  // " Startet das Routing zwischen Coordinator und allen Peers"
      dTxtStartAlive       = 41,  // "[0|1] 1= Startet beim Koordinator die Alive Kontrolle"
      dTxtAliveInt         = 42,  // "[DelayMs] Setzt beim Koordinator das Interval fuer das Alive"
      dTxtAliveNPeer       = 43,  // "[NextID] [PrevID] Bestimmt Vorgaenger & Nachfolger des Alive"
      txtMotorCmd          = 44,  // "Motorkommandos:"
      cTxtRelay            = 45,  // "toggleRelay"
      cTxtMultiL           = 46,  // "getMultiLevel"
      cTxtAnalogL          = 47,  // "getAnalogLevel"
      cTxtResetS           = 48,  // "resetSystem"
      txtFlashCmd          = 49,  // "Flashkommandos:"
      cTxtEraseF           = 50,  // "eraseDataFlash"
      cTxtSetId            = 51,  // "setID"
      cTxtGetId            = 52,  // "getID"
      cTxtMemWT            = 53,  // "memoryWriteTest"
      cTxtMemRT            = 54,  // "memoryReadTest"
      cTxtExitS            = 55,  // "exitSearch"
      dTxtRelay            = 56,  // "[Index]     Schaltet einen ausgang mit dem uebergebenen Index."
      dTxtMultiL           = 57,  // "[Index]     Gibt das Spannungslevel des Multiplexer Kanals aus."
      dTxtAnalogL          = 58,  // "[Index]     Gibt das Spannungslevel des Analogpins aus."
      dTxtResetS           = 59,  // "Startet die eigene Baugruppe neu."
      dTxtEraseF           = 60,  // "[block]   Loescht einen Block 0..7 im User Data Flash.Default:0"
      dTxtMemWT            = 61,  // "[key] [Data] beschreibt den Data Flash!"
      dTxtMemRT            = 62,  // "[key]        Lese Flash Data!"
      dTxtPreInitOK        = 63,  // "= = > Channel pre-Initialisierung abgeschlossen"
      dTxtBandPlanSelect   = 64,  // "= = > Channel Frequenzband gesetzt"
      dTxtADPResetOK       = 65,  // "= > ADP Layer wurde erfolgreich neugestartet"
      dTxtEAPResetOK       = 66,  // "= > EAP Layer wurde erfolgreich neugestartet!"
      dTxtEAPOnetimeOK     = 67,  // "= > EAP Layer Option verwerfen von Clientinformation erfolgreich"
      dTxtEAPPskRetryOK    = 68,  // "= > EAP Layer Option Wiederholen Bei EAP Fehler erfolgreich"
      dTxtDeviceTypeSetOK  = 69,  // "= > ADP Layer Devicetyp wurde erfolgreich gesetzt!"
      dTxtNormCoordSetOK   = 70,  // "= > Default Koordinator Route wurde gesetzt!"
      dTxtChannelInitOK    = 71,  // "Channel Initialisierung Abgeschlossen"
      dTxtNetBeginSetup    = 72,  // "Netzwerk wird initialisiert!"
      dTxtGKMsetOK         = 73,  // "= > Group Master Key wurde erfolgreich gesetzt!"
      dTxtNetStart         = 74,  // "= > Netzwerk gestartet      "
      dTxtEAPMStart        = 75,  // "= > EAP Authentifizierungsprotokoll gestartet!"
      dTxtNetInitialized   = 76,  // "Netzwerk initialisiert"
      dTxtUploadOK         = 77,  // "Firmenware Erfolgreich Uebertragen"
      dTxtNewDeviceDetect  = 78,  // "Ein Neues Geraet ist im Begriff sich anzumelden!"
      dTxtDataTransOK      = 79,  // "Uebertragung ist erfolgreich!"
      dTxtClientInfoOK     = 80,  // "Gerate Information im Modem erfolgreich hinterlegt!"
      dTxtJoinOK           = 81,  // "Join ist Erfolgreich!"
      dTxtLeaveOK          = 82,  // "Modem ist erfolgreich aus dem Netzwerk ausgetreten!"
      dTxtKickOK           = 83,  // "Teilnehmer wurde Erfolgreich entfernt!"
      dTxtRoutingRequest   = 84,  // "Es wird ein Routing Versuch gestartet!"
      dTxtRoutingError     = 85,  // "Die Route Konnte nicht ermittelt werden!"
      dTxtRoutingOK        = 86,  // "Es wurde eine Route zum Ziel gefunden!"
      dTxtReadMACCountOK   = 87,  // "Lesen des Mac Frame Counters erfolgreich!"
      dTxtLoadMacCountOK   = 88,  // "Laden des Mac Frame Counters erfolgreich!"
      dTxtSoftNotInMem     = 89,  // "Modem Software ist nicht im Prozessor Speicher hinterlegt!"
      dTxtNetScanFinish    = 90,  // "Netzwerk Scan abgeschlossen!"
      dTxtADPSetOK         = 91,  // "ADP Attribut wurde Angepasst"
      dTxtEAPSetOK         = 92,  // "EAP Attribut wurde Angepasst"
      fTxtMessageToken     = 93,  // "Message Receive Token: %d"
      dTxtPDiscLegend      = 94,
      // "Legende: c :=  cost in SNR // [xxx] :=  PLC-Knoten // --> :=  Verbindung zwischen zwei Knoten"
      dTxtPDiscEnd         = 95,
      // "-------------------------------Path Discovery Ende!---------------------------------------"
      dTxtInactivity       = 96,  // "Nachricht konnte wegen Inaktivitaet nicht gesendet werden!"
      dTxtIDNotKnown       = 97,  // "ID konnte nicht erkannt werden!"
      dTxtStartRouting     = 98,  // "Start Routing on PAN-ID: %04X"
      dTxtStartDiscovery   = 99,
      // "-------------------------------Start Path Discovery on PAN-ID: %04X ----------------------"
      dTxtRemotePathDiscovery = 100,  // "Remote PathDiscovery wird angestossen!";
      cTxtEAPAttrRequest   = 101,  // "EAP Attribut wird Angefragt!";
      cTxtMACAttrRequest   = 102,  // "MAC Attribut wird Angefragt!";
      cTxtADPAttrRequest   = 103,  // "ADP Attribut wird Angefragt!";
      cTxtMACAttrSet       = 104,  // "Mac Attribute wird gesetzt!";
      cTxtADPAttrSet       = 105,  // "ADP Attribute wird gesetzt!";
      cTxtEAPAttrSet       = 106,  // "EAP Attribute wird gesetzt!";
      cTxtClientAttrSet    = 107,  // "Attribut wird gesetzt!";
      dTxtPorCEntry        = 108,  // "Fehlerhafte Eingabe  nur 'P' oder 'C' wird akzeptiert!";
      dTxtG3ChannelInit    = 109,  // "G3 Kanal wird Initialisiert";
      dTxtVerboseSet       = 110,  // "Verbose Mode wird angepasst!";
      dTxtJoinTriggered    = 111,  // "Join angestossen!";
      dTxtForceJoinTrigger = 112,  // "Force Join angestossen!";
      dTxtMemberRoutesEval = 113,  // "Die Teilnehmerrouten werden aktualisiert!";
      dTxtAliveCheckBlock  = 114,  // "Eine Alive-Pruefung ist beim Teilnehmer nicht vorgesehen.";
      cTxtSendMsgToMember  = 115,  // " Nachricht [ %s ] gesendet zu Member Netzwerkadresse: %d"
      dTxtForceNetMemberSet = 116,  // "Eintrag wird gemacht!";
      dTxtInvalidArguments = 117,  // "Ungültige Argumente!";
      cTxtNetSearchStarted = 118,  // "Suche gestartet!";
      cTxtAliveTestEnabled = 119,  // "Alive-Pruefung ist %s freigegeben.",
      cTxtNot              = 120,  // "nicht"
      dTxtValueSet         = 121,  // "%s Wert %d gesetzt."
      cTxtAutoStartFlow    = 122,  // "AutostartFlow" (Mode)
      cTxtSetTargetNetID   = 123,  // "SetTargetNetID"
      cTxtSetOwnNetworkAdr = 124,  // "SetOwnNetworkAddress"
      dTxtAutoStartFlow    = 125,  // "[mode] 0:Network Search, 1= Network Force Join, 3= Force Join with verification"
      dTxtSetTargetNetID   = 126,  // "[id]  0...65535 ID vom gewuenschten Netzwerk"
      dTxtSetOwnNetworkAdr = 127,  // "[adr] 0...65535 Adresse vom eigenen Netzwerk"
      cTxtExitSearchMsg    = 128,  // "\nDer Autostart kann durch \"exitSearch\" abgebrochen werden!"
      cTxtPlcInitC         = 129,  // "plcInit C"
      cTxtPlcInitP         = 130,  // "plcInit P"
      cTxtRestartBootLoader = 131,  // "Starte BootLoader Neu!"
      cTxtRestartSystem    = 132,  // "Starte System Neu!"
      cTxtRestartInit      = 133,  // "Starte Init Neu!"
      cTxtTempTime         = 134,  // "Zwischenzeit: %s"
      cTxtNetScanTimeout   = 135,  // "Netzwerk Scan timeout!"
      cTxtStartJoiningPan  = 136,  // "Start Joining on PAN-ID: %04X and LBA-Agent: %04X"
      cTxtStartForceJoin   = 137,  // "Start Force Joining on PAN-ID: %04X with Network Address: %04X"
      cTxtJoinFailed       = 138,  // "Join fehlgeschlagen!"
      cTxtWaitNextTry      = 139,  // "Warte bis zum naechsten Versuch!"
      cTxtRestartJoin      = 140,  // "Starte Join erneut!"
      cTxtPLCAutoStartFin  = 141,  // "PLC Autostart Abgeschlossen!"
      cTxtStartTimeMsg     = 142,  // "Start-Time: %s"
      cTxtDelAgentMsg      = 143,  // "Loesche zuletzt benutzten Netzwerk Agenten!"
      cTxtForceJoinCheckMsg = 144,  // "ForceJoin-Prüfung versenden"
      cTxtForceJoinQuitMsg = 145,  // "ForceJoin-Prüfung quittieren"
      cTxtStartRouteMember = 146,  // "Starte Routing zu Member: %d"
      cTxtMemberRoutingEnd = 147,  // "MemberRouting abgeschlossen!"
      cTxtRoutingAborted   = 148,  // "Routing Abgebrochen"
      cTxtMemberRouteTimeOut    = 149,  // "MemberRouting Wait Timeout"
//    cTxtRoutingReqPeer2Peer = 150,  // "Routing Anfrage PEER%d >> PEER%d"
//    cTxtRoutingFound     = 151,     // "Routing gefunden!"
//    cTxtRoutingNotFound  = 152,     // "Routing nicht gefunden!"
//    cTxtOtherRequestMsg  = 153,     // "Es wird eine andere Anfrage bearbeitet"
//    cTxtRoutingStateUnknown = 154,  // "Routing Status unbekannt!"
      cTxtCoordNoAliveCheck   = 155,  // "Eine Alive-Pruefung ist beim Teilnehmer nicht vorgesehen."
      cTxtAliveInterval       = 156,  // "Alive-Interval: %d ms"
      cTxtNoChannel1Handling  = 157,  // "Eingehende Nachricht von Channel 1 wird nicht unterstuetzt!"
      cTxtDiscoverMetric      = 158,  // "\nMetric: %d"
      cTxtInteger3Digits      = 159,  // [%03d]
      cTxtDoubleDb            = 160,  // "--{c %+03.2f dB}-->"
      cTxtModemAnswer         = 161,  // "\nModem Antwort"
      cTxtModemRequest        = 162,  // "\nModem Anfrage"
      cTxtModemFwLoading      = 163,  // "Modem Software wird geladen:"
      cTxtModemFwSegRequest   = 164,  // "- Segment %c wurde angefragt"
      cTxtBaudChangeRequest   = 165,  // "- Baudraten Wechsel wurde angefragt"
      cTxtBaudChangeAccept    = 166,  // "- Baudrate 115200bps wurde akzeptiert"
      cTxtMessage             = 167,  // "Nachricht:"
      cTxtSignalQuality       = 168,  // "Signalqualitaet \xE4 t: %03.2f dB (SNR)"
      cTxtSwitchMatrixErr     = 169,  // "Fehlerhafte Switch Matrix Anweisung"
      cTxtSendK2Peer          = 170,  // "sende K zu Teilnehmer: %d"
      cTxtRefMemberToString   = 171,  // "-->> %s"
      cTxtEndOfMemberList     = 172,  // "Ende der Mitgliderliste."
      cTxtMemberIPDeactivated = 173,  // "Netzwerk-Teilnehmer-IP %d wurde deaktiviert!"
      cTxtEmptyMemberList     = 174,  // "Keine Netzwerkmitglieder vorhanden!"
      cTxtMemberList          = 175,  // "Netzwerkmitgliederliste:"
      cTxtIsCoordinatorMsg    = 176,  // "%03d Ist Coordinator: %d"
      cTxtPlcBoardNr          = 177,  // "PLC Board Nummer:"
      cTxtNoChannelWithIndex  = 178,  // "Kein Kanal mit diesem Index vorhanden!"
      cTxtChannelHighLevel    = 179,  // "Kanal ist HIGH Level!"
      cTxtChannelLowLevel     = 180,  // "Kanal ist LOW Level!"
      cTxtSendMessageToID     = 181,  // "sendMessage 0 S%d"
      cTxtAnalogPinMsg        = 182,  // "Analog Pin %d: %f V"
      cTxtSetIDMsg            = 183,  // "ID: %d gesetzt."
      cTxtFlashBlockDelMsg    = 184,  // "Flash-Block wurde geloescht!";
      cTxtDiscoveryConResults = 185,  // "\nDiscovery Container Results:\n"
      cTxtDiscoveryContainerN = 186,  // "Network ID: %04X  LBA Agent: %04X Link Quality: %04X RoutingCost: %04X\n"
      cTxtAliveMonitorLog     = 187,  // "Alive MonintorLog: "
                                      // "current[%4d]ms | median [%4.2f]ms | max [%4d]ms | min [%4d]ms"
      cTxtAutoStartEnd        = 188,  // "Auto Start wird abgebrochen!"
      cTxtAliveTimeout        = 189,  // "Teilnehmer meldet sich nicht (Transmisson):"
      cTxtAliveTransError     = 190,  // "Alive fehlerhafte Uebertragung sende erneut:"
      cTxtNewJoinText         = 191,  // "Folgender Teilnehmer ist dem Netzwerk beigetreten:"
      cTxtReJoinText          = 192,  // "Folgender Teilnehmer ist dem Netzwerk erneut beigetreten:"
      // Koordinator Routing
      cTxtCoordRouteRequest   = 193,  // "%sRC%03d#%03d"
      cTxtCoordRoutePeerMsg   = 194,  // "Routing: Koordinator--->Peer[%03d]"
      cTxtCoordRouteEndMsg    = 195,  // "----------------------Routing Abgeschlossen!----------------------"
      cTxtGetPLCAttr          = 196,  // "getPLCAttributes"
      dTxtGetPLCAttr          = 197,  // "Frage PLC Attribute ab"
      dTxtGetPLCAttrConfirm   = 198,  // "Attribute-Abfrage gestartet."
      dTxtFJCoordMsg          = 199,  // "Force Join Parameter Koordinator:"
      cTxtFJCoordCallOuts     = 200,  // "setFJCallOuts"
      dTxtFJCoordCallOuts     = 201,  // "[n] Anzahl der Wiederholungsversuche"
      dTxtFJCoordCallOutSet   = 202,  // "Callouts auf %d gesetzt."
      cTxtFJCoordDelay        = 203,  // "setFJDelay"
      dTxtFJCoordDelay        = 204,  // "[X|Y|Z] [n] Verweilzeit in Sekunden"
      dTxtFJCoordDelaySet     = 205,  // "Verweilzeit %c auf %d Sekunden gesetzt."
      cTxtFJCoordScale        = 206,  // "setFJScale"
      dTxtFJCoordScale        = 207,  // "Skalierungsfaktor zu Verweilzeit"
      dTxtFJCoordScaleSet     = 208,  // "Skalierungsfaktor auf %d gesetzt."
      cTxtRSearch             = 209,  // "RNetworkSearch"
      dTxtRSearch             = 210,  // "remote search network "
                                      // "[[Peer n] [SearchTime t]] or 'S'=Search with all members."
      cTxtRNetShow            = 211,  // "RNetworkShow"
      dTxtRNetShow            = 212,  // "[n] Discovery-Information fuer optional Peer n anzeigen"
      // Discovery Manager
      RDPeerEntries           = 213,  // "Remote discovery peer entries"
      RDNoMoreEntries         = 214,  // "No more entries"
      ShowPeerWithIP          = 215,  // "Peer IP:%d"
      ShowCoordinator         = 216,  // "Coordinator"
      DescriptorIP_LQI        = 217,  // "\rDescriptor IP LQI"
      ShowPercent             = 218,  // "    %%"
      dTxtDM07                = 219,  // "   %d       %d   %d"
      dTxtDM08                = 220,  // "%u %u"
      RDiscoveryFinished      = 221,  // "Remote Discovery finished."
      dTxtDM10                = 222,  // "%s%cR%03d %02d"
      dTxtDM11                = 223,  // "Discovery @Peer %04d"
      dTxtDM12                = 224,  // "Discovery @Koordinator"
      dTxtDM13                = 225,  // "IP zu hoch!"
      dTxtDM14                = 226,  // "Teilnehmer nicht active!"
      dTxtDM15                = 227,  // "Suchzeit ungueltig!"
      cTxtTestSuite           = 228,  // "setTestSuite"
      dTxtTestSuite           = 229,  // "[enable] [p] Test Suite freigeben (enable<>0) oder sperren. p= Test-Parameter"
      cTxtGetSysVersion       = 230,  // "getSystemVersion"
      dTxtGetSysVersion       = 231,  // "PLC System-Version abrufen"
      dTxt2ValuesSet          = 232,  // "%s Werte %d, %d gesetzt."
      txtPeer                 = 233,  // "Peer
// index 241 - 243 are empty strings
      cTxtUnitTestLastTest    = 234,  // "last_test"
      dTxtUnitTestLastTest    = 235,  // "[last_test] [true|false] "
                                      // "specify if last unit or integration test is running. default=true"
      dTxtHardwareVersion     = 236,  // "Hardware version: %s"
      txtUnknown              = 237,  // "unknown"
      txtSuccess              = 239,  // "success"
      txtFailed               = 240,  // "failed"
      txtEmpty                = 241,  // " "
      txtTrue                 = 242,  // "true"
      txtFalse                = 243,  // "false"
      txtHigh                 = 244,  // "HIGH"
      txtLow                  = 245,  // "LOW"
      txtNot                  = 246,  // "not"
      txtNone                 = 247,  // "none"
      txtYes                  = 248,  // "yes"
      txtNo                   = 249,  // "no"
      dTxtIntegration001      = 250,  // "Integration-Test: Number not available"
      dTxtIntegration002      = 251,  // Number of tested round trips: %s"
      dTxtIntegration003      = 252,  // The automation of the alive was started with a minimum number of %s peers.
      dTxtIntegration004      = 253,  // "Actually registered peers: %s"
      dTxtIntegration005      = 254,  // "Minimum spanning tree created: %s"
      dTxtIntegration006      = 255,  // "Alive route is registered within the peers: %s"
      dTxtIntegration007      = 256,  // "Peers who are not participants of the alive round trips any more:"
      dTxtIntegration008      = 257,  // "Alive round trip successful completed"
      dTxtIntegration009      = 258,  // "Peer %d is not participant of the alive round trips after %d seconds"
      dTxtIntegration010      = 259,  // "Peer %d is participant to the alive round trips again after %d seconds"
      dTxtIntegration011      = 260,  // "Test is running for %d seconds"
      dTxtIntegration012      = 261,  // "Number of round trips with repeated timeouts: %s"
      dTxtIntegration013      = 262,  // "Peer who temporarily did not participate to the alive round trips:"
// index 263 - 269 are empty strings
      dTxtAutomatic001        = 270,  // "\r%d groups are set at coordinator"
      dTxtAutomatic002        = 271,  // "\r%d groups are set at IP %d"
      dTxtAutomatic003        = 272,  // "\rThe following peer are in the 'pending' state and are not included:"
      dTxtAutomatic004        = 273,  // "\rProcess aborted."
      dTxtAutomatic005        = 274,  // "Timeout outer control is created."
      dTxtAutomatic006        = 275,  // "Refresh timeout outer control"
      TimeoutOuterControl     = 276,  // "Timeout outer control"
      dTxtAutomatic008        = 277,  // "\r%u broadcast groups are restored."
      dTxtAutomatic009        = 278,  // "alive automatic, %.30s main step=%u, sub step=%u, with automatic=%c"
      dTxtAutomatic010        = 279,  // "All timeouts within the automatic are deleted."
      dTxtAutomatic011        = 280,  // "\rA delay of 5 minutes is triggered again."
      dTxtAutomatic012        = 281,  // "\rOuter timeout within the automatic restarted."
      dTxtAutomatic013        = 282,  // "\rTimeouts of the route discovery are deleted."
      dTxtAutomatic014        = 283,  // "During the route discovery only %d peers are notified. Process aborted."
      dTxtAutomatic015        = 284,  // "Outer timeout deleted."
      dTxtAutomatic016        = 285,  // "\rInner timeouts are stopped within the automatic."
      dTxtAutomatic017        = 286,  // "\rTimeout for route discovery is created."
      dTxtAutomatic018        = 287,  // "Timeout of route discovery occurred."
      dTxtAutomatic019        = 288,  // "Callout of route discovery occurred."
      AdjacencyMatrixFilled   = 289,  // "Adjacency matrix is going to be filled."
      dTxtAutomatic021        = 290,  // "shortened tree:"
      dTxtAutomatic022        = 291,  // "broadcast groups are going to be distributed."
      dTxtAutomatic023        = 292,  // "The minimum number of peers are not reached after the distribution."
      dTxtAutomatic024        = 293,  // "\rRequested:%u, connected:%u"
      dTxtAutomatic025        = 294,  // "Repetition of creating the spanning tree."
      StartingOfTripsPossible = 295,  // "Starting of the alive round trips are now possible."
      dTxtAutomatic027        = 296,  // "Terminal outputs are reduced now."
      dTxtAutomatic028        = 297,  // "\rAlive round trips are going to be started."
      dTxtAutomatic029        = 298,  // "\r%d minutes dwell time remaining."
      BootSystemStart         = 299,  // "Boot System start."
      IgnoreForceJoinNTimes   = 300,  // "Ignore force join checks of %s for %u times"
      RepeatedTreatmentAckAlive = 301,  // "Wiederholte Verarbeitung vom Alive-Acknowledge unterbunden."
      FctnTransmitAliveTextErr = 302,   // "Function transmitAliveText, Fehler Gruppe 0"
      GroupAdrErrClassSpecification = 303,  // "Gruppen Adresse %03d ist ausgefallen: ..."
      TimeoutRoundTripControl = 304,  // "round trip control: timeout %03d of %03d"
      ShowThisHelpScreen = 305,       // "\rH,h,?           Show this help screen, consider upper and lower case"
      MemberRejected = 306,           // "member rejected."
      UntreatedJoinState = 307,       // "Untreated join state %02X"
      MemberDoesNotResponse = 308,    // "Member does not response (timeout):"
      MemberWithIPNoResponse = 309,   // "Member with IP %03d does not response"
      TxtContinue = 310,              // "Continue"
      DeactivationRejected = 311,     // "Deactivation of network member %d is rejected"
      ReporterIsLastMember = 312,     // "Reporter is last member in the alive route"
      ReportAnotherAliveLoss = 313,   // "There is already another attempt for an alive route loss in progress"
      ReportRequestSameIPAndNumber = 314,  // "Request was handled with the same IP and round trip number"
      ReportErrorJumpMapper = 315,         // "Error in JumpMapper::informUserAboutInvalidity"
      AliveJumpReqAck = 316,               //  "Alive jump request acknowledged"
      StartAliveRoundTripWithIP = 317,     // "Start alive round trip with IP IP %03d"
      IgnoreReqDueAlreadyHandled = 318,    // "Request ignored. Round trip already in request state"
      MemberReportsLossOfSuccessor = 319,  // "Member IP %03d reports an loss of IP %03d!"
      ErrorJumpMessageReceived = 320,      // "Error: jump request message received, timeout ID %03d already started"
      TimeoutIDNotInitialized = 321,       // "Timeout with ID %03d was not initialized"
      NumberOfVertices = 322,              // "Number of vertices: %d"
      WeightOfVertex = 323,                // "Weight of vertex (%u,%u): %d"
      OriginOfMatrix = 324,                // "Origin of matrix: %p"
      RouteFromTo = 325,                   // "Route %d -> %d %c"
      RouteMaxLenReached = 326,            // "The maximum route length has been reached."
      SpanningTreeIsCleaved = 327,         // "The spanning tree is cleaved:"
      RouteFromToWithDepth = 328,          // "#%d Route %u -> %u. Depth:%u"
      AdjacencyMatrix = 329,               // "Adjacency matrix"
      AcknowledgeReceived = 330,           // "Acknowledge received"
      RDTransmissionIgnoreOnce = 331,      // "Remote Discovery transmission ignored once"
      RDRequestIgnoreOnce = 332,           // "Remote-Discovery request ignored once"
      RDRequestWillBeIgnored = 333,        // "%u Remote Discovery requests will be ignored"
      RDTxSuppressedNTimes = 334,          // "Remote Discovery data transmission to coordinator is suppressed %u times"
      RDSearchIsStarted = 335,             // "Remote Discovery: Search is started."
      RDShowPendingMask = 336,             // "simpleDiscovery::nextAutoDiscovery. Pending Mask: %x, Index: %d"
      RDNextRepeatOnce = 337,              // "simpleDiscovery::nextAutoDiscovery. Repeat once"
      RDNextRepeatPeers = 338,             // "simpleDiscovery: Route Discovery will be repeated with individual peers."
      RDNextTimeoutCleared = 339,          // "simpleDiscovery: Route Discovery timeout cleared."
      RDNextTimeoutRestarted = 340,        // "simpleDiscovery: Route Discovery timeout restarted."
      TimeoutAcknowledge = 341,            // "Timeout acknowledge"
      TimeoutRemoteData = 342,             // "Timeout remote data"
      ProgressXofY = 343,                  // "  Progress %d/%d"
      AliveWarningSuperiorTest = 344,      // "The alive round trips are bound to a superior test...
      RoundTripsAreStarted = 345,          // "Alive round trips are started."
      RoundTripsAreStopped = 346,          // "Alive round trips are stopped."
      UseCommandInCoordinatorModeOnly = 347,  // "The command is reserved in coordinator mode only"
      UseCommandInPeerModeOnly = 348,      // "The command is reserved in peer mode only"
      CmdGlobalReset = 349,                // "globalReset"
      DescriptionGlobalReset = 350,        // "Restarts globally all device within the network"
      CmdSetDefaultParams = 351,           // "setDefaultParameter"
      DescriptSetDefaultsParams = 352,     // "set default parameters"
      CmdGetAliveMapping = 353,            // "getAliveMapping"
      DescriptAliveMapping = 354,          // "shows a reference table for the alive routing"
      CmdEditTimeout = 355,                // "editTimeout"
      DescriptSetDelay = 356,              // "[ID] [Delay] test: set delay of an internal timer (TimeoutDelayID = 2)"
      IncorrectEntry = 357,                // "incorrect entry"
      TimeOutSetMessage = 358,             // "The timeout delay with ID %d was set to %d [50ms]."
      GlobalResetMessage = 359,            // "Global reset is executed."
      SendRawDataMessage = 360,            // "Raw data are send to the PLC modem."
      EndOfTableMessage = 361,             // "== End of table =="
      ShowIDMessage = 362,                 // "ID: %d"
      StoreJoinInfoMsg = 363,              // "Store join information"
      ShowRandomDelay = 364,               // "Random-Delay:%ds"
      ForceJoinTimeoutMsg = 365,           // "Force join timeout"
      SoftwareResetMsg = 366,              // "Software reset"
      InitializationSuccessfulMsg = 367,   // "Initialization successful"
      StartNetworkSearchMsg = 368,         // "Start network search"
      ShowForceJoinStep = 369,             // "Force join step: %d"
      ShowForceJoinState = 370,            // "Force join state: %x"
      WaitForAliveMsg = 371,               // "Wait %d seconds for alive round trips"
      ShowVerificationRequests = 372,      // "Verification requests J:%d"
      CmdPlCLeave = 373,                   // "plcleave"
      DescriptPLCLeave = 374,              // "This command causes the modem to leave the network"
      CmdSendPLCRaw = 375,                 // "sendPLCRaw"
      DescriptSendRaw = 376,               // "a b c ... z send raw data (hex. z.B. a=7E,b=00,c=...,z=7E) to the modem"
      CmdTriggerAutomatic = 377,           // "triggerAutomatic"
      DescriptTriggerAuto = 378,           // "[n] execute steps up to the alive test. ...
      CmdStart = 379,                      // "start"
      CmdStop = 380,                       // "stop"
      DescriptExecAlive = 381,             // "alive [round trips] @coordinator: executes ...
      DescriptIntegrationTest = 382,       // "integration test [test-#] [period] [minPeers] ...
      DescriptStopAliveTest = 383,         // "alive @coordinator: stops the alive round trips. ...
      DescriptStopIntegrationTest = 384,   // "integration test @coordinator: stops the actual integration test"
      CmdAutoSubSteps = 385,               // "autoSubSteps"
      DescriptAutoSubStep = 386,           // "DEBUGGING: [s1] [s2] starts steps for the alive test automatic ...
      CmdBlockStoreTable = 387,            // "BlockStoreTable"
      DescriptBlockStoreTable = 388,       // "[0|1] Expert: 1=suppress writing of the cycling routing information"
      CmdBCGroupSet = 389,                 // "RBroadGroupSet"
      DescriptBCGroupSet = 390,            // "[target IP|all][offset][numTupel][memberID,BGIP] [..]"
      CmdIgnoreFCRequests = 391,           // "ignoreFCRequests"
      DescriptFCRequest = 392,             // "[n] Expert: ignore Force Join checks at peer or coordinator for n times"
      CmdTestMalloc = 393,                 // "testMalloc"
      DescriptionTestMalloc = 394,         // "[n] Expert: Heap-Test with n Bytes"
      CmdFillAdjMatrix = 395,              // "FillAdjMatrix"
      DescriptFillAdjMatrix = 396,         // "[m] Expert: Fill adjacency matrix...
      CmdShowAdjMatrix = 397,              // "showAdjMatrix"
      DescriptShowAdjMatrix = 398,         // "Show adjacency matrix"
      CmdPresetAliveRoute = 399,           // "presetAliveRoute"
      DescriptPresetAliveRoute = 400,      // "[IP1] [IP2] ... [IPn] Expert: preset route for the alive test"
      CmdRegVirtPeers = 401,               // "registerVirtualPeers"
      DescriptRegVirtPeers = 402,          // "[maxIP] Expert: register virtual peers...
      CmdClearFC = 403,                    // "clearDeviceFC"
      DescriptClearFC = 404,               // "[tabeOffset][srcAddress] Expert: deletes the MacFrameCounter entry
      CmdEnableAliveRound = 405,           // "enableAliveRound"
      DescriptEnableAlive = 406,           // "[Enable] Expert: Enables the round trip test for an peer...
      CmdPoll = 407,                       // "poll"
      DescriptPoll = 408,                  // "[target IP] sends an Poll command to the target IP and switches...
      CmdInput = 409,                      // "input"
      DescriptInput = 410,                 // "[target IP] <input-nr.> Shows the requested input...
      CmdOutput = 411,                     // "output"
      DescriptOutput = 412,                //  "[target IP] <relay> <level> sets output <relay> {0,1,2,3} to level...
      CmdSendGlobalTimeout = 413,          // "sendGlobalTimeout"
      DescriptGlobalTimout = 414,          // "... Expert: send parameters for timeout settings
      CmdI2cRead = 415,                    // "i2cRead"
      DescriptI2cRead = 416,               // "Expert: Read sample data from i2c chip"
      CmdI2cWrite = 417,                   // "i2cWrite"
      DescriptI2cWrite = 418,              // "Expert: Write sample data to i2c chip"
      CmdI2cInit = 419,                    // "i2cInit"
      DescriptI2cInit = 420,               // "Expert: Initialize i2c bus driver"
      CmdI2RdMac = 421,                    // "i2cRd Mac"
      DescriptI2RdMac = 422,               // "Read MAC address from i2c chip"
      InvalidNumberArguments = 423,        // "Invalid number of arguments"
      LeaveNetworkCmdMsg = 424,            // "Leave network command triggered"
      TerminalMsg = 425,                   // "Terminal"
      LoopsMsg = 426,                      // "Loops: %u"
      AliveTestEnabled = 427,              // "Alive test is %s enabled. %s"
      TestRestoreJoinTable = 428,          // "Test restore of join tables"
      TestFunctionNr = 429,                // "Test function #%d"
      CmdLineEntryTest = 430,              // "LineEntryTest"
      DescriptionLineEntryTest = 431,      // "[n] Expert: test function #n"
      ArgumentIsStored = 432,              // "Argument is stored."
      BlockStoreTableState = 433,          // "block store table state is %d"
      MallocFailMsg = 434,                 // "malloc fails with return value:%p"
      MallocAvailableMsg = 435,            // "%d Bytes are available in the Heap memory."
      VirtualPeersAreRegistered = 436,     // "virtual peers are registered up to IP %u"
      CmdVerify = 437,                     // "verify"
      CoordinatorMayNotRequested = 438,    // "coordinator may not requested."
      GlobalSendTimoutMsg = 439,           // "Global timeouts are going to be send."
      CmdAlive = 440,                      // "alive"
      CmdIntegrationTest = 441,            // "integration test"
      IntegrationTestStopped = 442,        // "integration test already stopped."
      ShowLastResetReason = 443,           // "Reason of the last reset: "
      ShowModemRequest = 444,              // "\nModem request"
      ShowModemAnswer = 445,               // "Modem answer"
      SearchingForFCEntry = 446,           // "Searching for frame counter entry"
      FailureStatusCode = 447,             // "Failure Status code: %s"
      SourceIP = 448,                      // "source IP: %03d"
      ReportLossOfMember = 449,            // "Loss of member successful reported"
      TimeoutValuesSet = 450,              // "Timeout values set"
      ExternalTimeoutsRejected = 451,      // "external timeout values rejected"
      ForceJoinCheckIgnore1x = 452,        // "force join check is ignored once"
      ForceJoinCheckFailInfo = 453,        // "Member=Null: %d Mac-Ptr %x IP-Ptr %x !Disconnected: %d"
      ForceJoinCheckReceived = 454,        // "force join check received. IP:%04d"
      AddressesAssigned = 455,             // "Addresses are going to be assigned"
      AddressesIgnored1x = 456,            // "Addresses are ignored once"
      InterpretationError = 457,           // "interpretation error"
      GroupAssignmentSuccessful = 458,     // "Group assignment successful!"
      HandleExternalResetRequest = 459,    // "Handle external reset request"
      FrameCounterDeletionFinished = 460,  // "frame counter deletion finished"
      NoFrameCounterEntry = 461,           // "no frame counter entry found"
      ShowActualRoundTripNumber = 462,     // "RoundTrip #%d %s"
      StateFinished = 463,                 // "finished"
      StateInProgress = 464,               // "in progress"
      ShowAllRoundTripsFinished = 465,     // "Alive round trips are finished!"
      DebugShowProcessAssignment = 466,    // "processAssignment"
      DebugShowIncFlowStep = 467,          // "incFlowStep"
      DebugShowRDResults = 468,            // "triggerShowNetworkDiscoveryResults"
      DebugRemoteBCSelection = 469,        // "remoteBroadcastGroupSelection"
      DebugCoordRouting = 470,             // "doCoordRouting"
      DebugCallbackCoordRouting = 471,     // "coordRoutingCallBack"
      DebugRouteDiscovery = 472,           // "doRouteDiscovery"
      DebugBuildTree = 473,                // "doBuildTree"
      DebugProofTree = 474,                // "doProofTree"
      DebugDoAssign = 475,                 // "doAssignAutomatic"
      DebugAssignmentCallout = 476,        // "assignmentCallOut"
      DebugStartAlive = 477,               // "doStartAlive"
      DebugUserInterface = 478,            // "user interface"
      DebugTimeoutRouting = 479,           // "timeoutRoutingStart"
      NumberOfPeersForAliveInput = 480,    // "Only %d peers are available. Please correct the input"
      EnterCorrectNumberOfArgs = 481,      // "Please enter the correct number of arguments"
      TupleInputError = 482,               // "Tuple input error"
      NoSpanningTreeOrRouteInfo = 483,     // "No spanning tree or routing information available"
      IgnoreBCAssignmentNTimes = 484,      // "The assignment of the broadcast groups is %d times ignored"
      AssignGroupsMessage = 485,           // "Group will be set: previous G: %d next G: %d acknowledge G: %d"
      ShowBypassGroupResults = 486,        // "peerIP %d receiverGroup %d transmitterGroup %d ||"
      MSTCleavedRestartSearch = 487,       // "Minimum spanning tree cleaved. Neighbor search is restarted."
      MSTCleavedAutomaticStopped = 488,    // "Minimum spanning tree cleaved. Automatic stopped."
      MSTAlright = 489,                    // "Minimum spanning tree is all right."
      RouteSetTerminal = 490,              // "The alive route is set by terminal."
      ShowRoleWithIp = 491,                // "{Role: %s IP: %03d}"
      ShowTimeoutCounter = 492,            // "timeOutCounter: %d"
      FiveMinuteDelayStarted = 493,        // "\r5min automatic delay is started."
      MinimumAmountPeerNotReached = 494,   // "Minimum amount of peers is not reached.\rRequired:%u, connected:%u"
      DebugAssignmentTimeout = 495,        // "Assignment Timeout!"
      IoCmdPollState = 496,                // "Polling: device poll state is %s"
      StateActive = 497,                   // "active"
      StateStopped = 498,                  // "stopped"
      IoCmdWrongInput = 499,               // "Error: (sendIoCmdRequest): wrong command input!"
      IOCmdRequestWasSendToIP = 500,       // "%s request was send to member with IP %03d."
      IOCmdWrongPinStateReplyType = 501,   // "Wrong pin state reply type!"
      IOCmdRequestReplied = 502,           // "Request was replied."
      IOCmdOutputIndexWrong = 503,         // "Output: output with index %03d is illegal!"
      IoCmdOutputSetTo = 504,              // "Output: output with index %03d was set to %s."
      IoCmdRequestNotReplied = 505,        // "The request was not replied even though it was repeated!"
      IoCmdInputState = 506,               // "Input %d.%d: %u\n"
      IoCmdOutputState = 507,              // "Output %d.%d: %u\n"
      IoCmdExecutePoll = 508,              // "Polling is %s in device with IP %03d."
      txtExecuted = 509,                   // "executed"
      txtNotExecuted = 510,                // "not executed"
      IoCmdReplyWithNoRequest = 511,       // "Polling: Reply with no request!"
      IoCmdSwitchReplyNoRequest = 512,     // "Switching: Reply with no request!"
      IoCmdSwitchACK = 513,                // "Switch message was acknowledged."
      IoCmdInputReportMsg = 514,           // "Peer with IP %03d reports input %d was set to %s."
      MemInfoTitle = 515,                  // "Memory-Information\r"
      MemRomUsage = 516,                   // "ROM-Usage: %u Bytes = %u%%\r"
      MemRamUsage = 517,                   // "RAM-Usage:\r static variables: %u bytes = %u%%\r"
      MemDynVars = 518,                    // "dynamic variables: %u bytes = %u%%\r"
      MemUserStack = 519,                  // "User defined stack: %u bytes reserved, %u bytes used = %u%%\r"
      MemIntStack = 520,                   // "   Interrupt stack: %u bytes reserved, %u bytes used = %u%%\r"
      MemSummaryRAM = 521,                 // "\rSummary RAM: %u bytes = %u%%\r"
      GetAttributeIsNotSaved = 522,        // "Get attribute %3d should not be saved."
      AttributeSaved = 523,                // "Attribute %3d %s saved. Index:%4d"
      txtWas = 524,                        // "was"
      txtAlready = 525,                    // "already"
      TheRelaySwitched = 526,              // "the relay will be switched"
      IncorrectIndexEntry = 527,           // "Incorrect index entry"
      txtPopOut = 528,                     // "Pop Out -> %d"
      switchMatrixSendMsg = 529,           // "sendMessage B %d %sM%02d#%02d"
      DefaultParametersSet = 530,          // "Default parameters set"
      MemoryIsWritten = 531,               // "Memory is written"
      AliveRetransmitRequest = 532,        // "retransmitRequest, Timer %d Event"
      AliveNoResponseTimeout = 533,        // "handleAliveNoResponseTimeOut, Timer %d Event"
      AliveTransmitAlarmRequest = 534,     // "transmitAlarmRequest, Timer %d Event"
      HardwareReferenceError = 535,        // "hardware reference error"
      cTxtUpdateStart = 536,               //  "startUpdate";
      cTxtUpdateStatus = 537,              //  "This command start's the copyDeployUpdate";
      dTxtUpdateStart = 538,               //  "getUpdateStatus";
      dTxtUpdateStatus = 539,              //  "This command return the current UpdateStatus";
      cTxtTestSpiFlash = 540,              // "spiFlashIf"
      dTxtTestSpiFlash = 541,              // "Test interface for SPI flash devices"
    };

    I18N();
    virtual ~I18N();

    // Get texts from the database
    static const char *getText(textNumber nNo);
};

typedef I18N TX;


}  // namespace AME_SRC

#endif  // SRC_AME_PROJECT_SYSTEMLOGIC_I18N_H_
